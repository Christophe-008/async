console.log("üëã Hello World!");

console.log("T√¢che 1");
console.log("T√¢che 2");
console.log("T√¢che 3");

// setTimeout(() => {
//     console.log("Op√©ration termin√©e !");
// }, 2000);

console.log("T√¢che 4");

// function operationAsynchrone_1(callback) {
//     console.log("D√©but de l'op√©ration...");
//     setTimeout(() => {
//         console.log("Op√©ration_1 termin√©e !");
//         fin();
//     }, 2000); // Simule une op√©ration qui prend 2 secondes
// }

// function fin() {
//     console.log("Je suis appel√© apr√®s l'op√©ration asynchrone.");
// }

// callback

// Promise Async Await

function operationAsynchrone_2() {
    return new Promise((resolve, reject) => {
        console.log("D√©but de l'op√©ration...");
        setTimeout(() => {
            const success = true; // On peut imaginer un succ√®s ou un √©chec
            if (success) {
                resolve("Op√©ration_2 r√©ussie !");
            } else {
                reject("Op√©ration √©chou√©e !");
            }
        }, 2000);
    });
}

// operationAsynchrone_2()
//     .then((result) => console.log(result)) // G√©rer le succ√®s
//     .catch((error) => console.log(error)); // G√©rer l'√©chec

function operationAsynchrone() {
    return new Promise((resolve, reject) => {
        console.log("D√©but de l'op√©ration...");
        setTimeout(() => {
            const success = true;
            if (success) {
                resolve("Op√©ration r√©ussie !");
            } else {
                reject("Op√©ration √©chou√©e !");
            }
        }, 2000);
    });
}

async function login() {
    try {
        const result = await operationAsynchrone();
        console.log(result);
        // appel d'autres fonctions....
    } catch (error) {
        console.log(error);
    }
}

// login();

async function fetchData() {
    try {
        const res = await fetch("https://jsonplaceholder.typicode.com/posts/1");
        console.log(res);

        const data = await res.json();
        console.table(data);
        title.textContent = data.title;
    } catch (error) {
        console.log("Erreur lors de la r√©cup√©ration des donn√©es", error);
    }
}

fetchData();

// axios
